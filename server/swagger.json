{
  "swagger": "2.0",
  "info": {
    "title": "PS API",
    "version": "1.0.0",
    "description": "All API endpoints used in this project."
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "scheme": "bearer",
      "in": "header"
    }
  },
  "basePath": "",
  "paths": {
    "/api/user": {
      "post": {
        "summary": "User signup",
        "tags": ["User"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User signup details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "description": "User email address",
                  "required": true,
                  "type": "string",
                  "default": "example@example.com"
                },
                "password": {
                  "required": true,
                  "type": "string",
                  "default": "password123"
                },
                "displayName": {
                  "type": "string",
                  "default": "Sample name"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Signup successful"
          },
          "400": {
            "description": "email already exists"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/user/login": {
      "post": {
        "summary": "User login",
        "tags": ["User"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User login details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Invalid email or password"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/user/change-password": {
      "post": {
        "summary": "Change user password",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User email, old password, and new password",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password changed successfully"
          },
          "401": {
            "description": "Incorrect old password"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/user/{email}": {
      "delete": {
        "summary": "Delete a user by email",
        "tags": [
          "User"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "email of the user to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/protected": {
      "get": {
        "summary": "Protected route",
        "tags": ["Protected"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Access granted to protected route",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "userId": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token or access denied"
          }
        }
      }
    },
    "/api/project/create": {
      "post": {
        "summary": "Create a project",
        "tags": [
          "Project"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "project",
            "description": "Project details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewProject"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Project created successfully",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "400": {
            "description": "Project name already exists!"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/project": {
      "get": {
        "summary": "Get all projects",
        "tags": [
          "Project"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "description": "ProjectId to get projects",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Project"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/project/update/{id}": {
      "put": {
        "summary": "Update a project",
        "tags": [
          "Project"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the project to update",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "in": "body",
            "description": "Updated project details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project updated successfully",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "404": {
            "description": "Project not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/project/delete/{id}": {
      "delete": {
        "summary": "Delete a project",
        "tags": [
          "Project"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the project to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Project deleted successfully"
          },
          "404": {
            "description": "Project not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/product/create": {
      "post": {
        "summary": "Create a new product",
        "tags": ["Product"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Product data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProductRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product created successfully"
          },
          "400": {
            "description": "Product name already exists"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/product": {
      "get": {
        "summary": "Get all product",
        "tags": [
          "Product"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "description": "ProjectId to get products",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/product/update/{id}": {
      "put": {
        "summary": "Update a product",
        "tags": [
          "Product"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product to update",
            "required": true,
            "type": "string"
          },
          {
            "name": "product",
            "in": "body",
            "description": "Updated product details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProduct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project updated successfully"
          },
          "404": {
            "description": "Project not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/product/delete/{id}": {
      "delete": {
        "summary": "Delete a product",
        "tags": [
          "Product"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Product deleted successfully"
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/project/getPVData": {
      "get": {
        "summary": "Get getPVData",
        "tags": [
          "Project"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "description": "ProjectId to get projects",
            "required": false,
            "type": "string"
          },
          {
            "name": "productId",
            "in": "query",
            "description": "productId to get projects",
            "required": false,
            "type": "string"
          }
        ],
        
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/project/generateApi/{projectId}": {
      "get": {
        "summary": "Get generate",
        "tags": [
          "Project"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ProjectId to get projects",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "ChangePasswordRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "oldPassword": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      },
      "required": [
        "email",
        "oldPassword",
        "newPassword"
      ]
    },
    "Project": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "NewProject": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "UpdateProject": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "CreateProductRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "powerPeak": {
          "type": "number"
        },
        "orientation": {
          "type": "string",
          "enum": ["N", "E", "S", "W"]
        },
        "inclination": {
          "type": "number"
        },
        "area": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        },
        "latitude": {
          "type": "number"
        },
        "project": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "powerPeak",
        "orientation",
        "inclination",
        "area",
        "longitude",
        "latitude",
        "project"
      ]
    },
    "UpdateProduct": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "powerPeak": {
          "type": "number"
        },
        "orientation": {
          "type": "string",
          "enum": ["N", "E", "S", "W"]
        },
        "inclination": {
          "type": "number"
        },
        "area": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        },
        "latitude": {
          "type": "number"
        }
      },
      "required": [
        "name",
        "powerPeak",
        "orientation",
        "inclination",
        "area",
        "longitude",
        "latitude"
      ]
    }
  }
}
